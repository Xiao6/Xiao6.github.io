<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>开启Hexo评论</title>
      <link href="/2020/05/17/hexo-comment/"/>
      <url>/2020/05/17/hexo-comment/</url>
      
        <content type="html"><![CDATA[<h2 id="Valine"><a href="#Valine" class="headerlink" title="Valine"></a>Valine</h2><blockquote><p>推荐使用，可以进行匿名评论，用户友好。</p></blockquote><p>申请leancloud账户，后从<code>config.yml</code>开启使用。</p><p>缺点是不能进行comment管理，需要从leancloud后台进行控制。<br><img src="https://i.imgur.com/zJC9Vlo.jpg" alt=""></p><h2 id="Gitalk"><a href="#Gitalk" class="headerlink" title="Gitalk"></a>Gitalk</h2><blockquote><p>需要每一个认证的用户进行github app授权。不推荐使用。</p></blockquote><p>Gitalk用Github issue来管理comments。这样我们的博客放在Github page, comment放在Github issue，两者可以用Github进行管理。</p><a id="more"></a> <p>Next提供了对Gitalk的支持。用起来十分方便。具体设置可以参考：<a href="https://theme-next.js.org/docs/third-party-services/comments" target="_blank" rel="noopener">https://theme-next.js.org/docs/third-party-services/comments</a></p><ol><li>首先新建一个<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">OATH application</a>, callback URL填入博客地址，其他部分可以任意填写。</li><li>新建一个github repo来管理comment。建议单独新建repo方便管理，不要和github.io共享一个repo.</li><li>在Next设置gitalk配置,<code>enable</code>设置为<code>true</code>，并填写<code>repo</code>, <code>client_id</code>, <code>client_secret</code> 和<code>admin_user</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Gitalk</span><br><span class="line"># Demo: https:&#x2F;&#x2F;gitalk.github.io</span><br><span class="line">gitalk:</span><br><span class="line">  enable: false</span><br><span class="line">  github_id:  # Github repo owner</span><br><span class="line">  repo:  # Repository name to store issues</span><br><span class="line">  client_id:  # Github Application Client ID</span><br><span class="line">  client_secret:  # Github Application Client Secret</span><br><span class="line">  admin_user:  # GitHub repo owner and collaborators, only these guys can initialize github issues</span><br><span class="line">  distraction_free_mode: true # Facebook-like distraction free mode</span><br><span class="line">  # Gitalk&#39;s display language depends on user&#39;s browser or system environment</span><br><span class="line">  # If you want everyone visiting your site to see a uniform language, you can set a force language value</span><br><span class="line">  # Available value: en, es-ES, fr, ru, zh-CN, zh-TW</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure></li></ol><p>我们用theme的原因就是避免自己造轮子。多多研究<code>_config.yml</code>，基本上所有的功能都会涵盖了。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开启Hexo评论2</title>
      <link href="/2020/05/17/hexo-enable-comment/"/>
      <url>/2020/05/17/hexo-enable-comment/</url>
      
        <content type="html"><![CDATA[<p>test </p><h2 id="Valine"><a href="#Valine" class="headerlink" title="Valine"></a>Valine</h2><blockquote><p>推荐使用，可以进行匿名评论，用户友好。</p></blockquote><p>申请leancloud账户，后从<code>config.yml</code>开启使用。</p><p>缺点是不能进行comment管理，需要从leancloud后台进行控制。<br><img src="https://i.imgur.com/zJC9Vlo.jpg" alt=""></p><h2 id="Gitalk"><a href="#Gitalk" class="headerlink" title="Gitalk"></a>Gitalk</h2><blockquote><p>需要每一个认证的用户进行github app授权。不推荐使用。</p></blockquote><p>Gitalk用Github issue来管理comments。这样我们的博客放在Github page, comment放在Github issue，两者可以用Github进行管理。</p><a id="more"></a> <p>Next提供了对Gitalk的支持。用起来十分方便。具体设置可以参考：<a href="https://theme-next.js.org/docs/third-party-services/comments" target="_blank" rel="noopener">https://theme-next.js.org/docs/third-party-services/comments</a></p><ol><li>首先新建一个<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">OATH application</a>, callback URL填入博客地址，其他部分可以任意填写。</li><li>新建一个github repo来管理comment。建议单独新建repo方便管理，不要和github.io共享一个repo.</li><li>在Next设置gitalk配置,<code>enable</code>设置为<code>true</code>，并填写<code>repo</code>, <code>client_id</code>, <code>client_secret</code> 和<code>admin_user</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Gitalk</span><br><span class="line"># Demo: https:&#x2F;&#x2F;gitalk.github.io</span><br><span class="line">gitalk:</span><br><span class="line">  enable: false</span><br><span class="line">  github_id:  # Github repo owner</span><br><span class="line">  repo:  # Repository name to store issues</span><br><span class="line">  client_id:  # Github Application Client ID</span><br><span class="line">  client_secret:  # Github Application Client Secret</span><br><span class="line">  admin_user:  # GitHub repo owner and collaborators, only these guys can initialize github issues</span><br><span class="line">  distraction_free_mode: true # Facebook-like distraction free mode</span><br><span class="line">  # Gitalk&#39;s display language depends on user&#39;s browser or system environment</span><br><span class="line">  # If you want everyone visiting your site to see a uniform language, you can set a force language value</span><br><span class="line">  # Available value: en, es-ES, fr, ru, zh-CN, zh-TW</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure></li></ol><p>我们用theme的原因就是避免自己造轮子。多多研究<code>_config.yml</code>，基本上所有的功能都会涵盖了。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo和Github Page搭建个人博客</title>
      <link href="/2020/05/16/hexo-tutorial/"/>
      <url>/2020/05/16/hexo-tutorial/</url>
      
        <content type="html"><![CDATA[<p>这篇文章会介绍静态网站的一些基本知识，并教大家如何用Hexo搭建个人博客。我搭建的这个博客就是用到了下面的知识。</p><h1 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h1><p>在开始搭建博客之前，我会介绍一些相关知识。如果不感兴趣，可以直接跳到第二部分进行博客搭建。</p><h2 id="什么是静态网站？"><a href="#什么是静态网站？" class="headerlink" title="什么是静态网站？"></a>什么是静态网站？</h2><p>静态网站是指全部由HTML页面组成的网站。静态网站需要服务器来处理web request或者database communication. 这种特点决定了它非常适合功能简单的网站，比如博客。与之相对应的动态网站，一般需要有在服务器端运行的程序，会和用户进行交互来实现比较复杂的功能，比如浏览twitter需要的点赞功能。</p><a id="more"></a> <h2 id="静态网站的好处"><a href="#静态网站的好处" class="headerlink" title="静态网站的好处"></a>静态网站的好处</h2><p>静态网站有如下好处：</p><ul><li>不需要数据库</li><li>不需要服务器端的动态处理</li><li>呈现速度更快</li><li>更加安全</li><li>可以更好的利用CDN</li><li>缓存对静态网站更加有效</li></ul><h2 id="什么是静态网站生成器？"><a href="#什么是静态网站生成器？" class="headerlink" title="什么是静态网站生成器？"></a>什么是静态网站生成器？</h2><p>静态网站生成器 (Static Website Generater)是指生成静态网站的程序。<br>对于静态博客生成器来说，你在本地运行生成器，它会把你写好的markdown文件生成为html。</p><h2 id="有哪些静态博客生成器？各有什么优缺点？"><a href="#有哪些静态博客生成器？各有什么优缺点？" class="headerlink" title="有哪些静态博客生成器？各有什么优缺点？"></a>有哪些静态博客生成器？各有什么优缺点？</h2><p>比较主流的有Jekyll, Hugo 和 Hexo.</p><h3 id="Jekyll"><a href="#Jekyll" class="headerlink" title="Jekyll"></a>Jekyll</h3><p><a href="https://import.jekyllrb.com/docs/home/" target="_blank" rel="noopener">Jekyll</a>是目前最流程的框架，它是Ruby语言写的。也是Github维护并推荐用于Github Page的框架。<br>Jekyll开源易用，并且支持用workpress迁移。缺点是incremental build功能还不是很完善，所以如果你的文章比较多，那么build可能会慢一点。</p><h3 id="Hugo"><a href="#Hugo" class="headerlink" title="Hugo"></a>Hugo</h3><p>Hugo是Go语言写的，易用并且速度很快。缺点是你需要了解Go语言来创建自己的theme。</p><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>Hexo在中文社区非常流行。在v2ex有很多关于Hexo的讨论。它是由Node.js写成的框架，并且开源免费，速度非常快。唯一缺点可能是英文支持不是很好吧，但是对于中文比英文还好的我来说，这就不是事儿了。</p><p>对于个人博客来说，最重要的就是内容了。所以完全不用在框架和主题上花费太多时间。（而且很多人都是直接RSS订阅，内容永远是对博客最重要的。）</p><h1 id="手把手教你用Hexo搭建博客"><a href="#手把手教你用Hexo搭建博客" class="headerlink" title="手把手教你用Hexo搭建博客"></a>手把手教你用Hexo搭建博客</h1><h2 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h2><p>下面就到了搭建博客的环节了，这个博客就是用下面的流程搭建的。</p><ol><li><p>GitHub创建个人仓库<br>用Github创建一个<code>用户名.http://github.io</code>的仓库</p></li><li><p>安装Git并进行配置<br>这个教程可以follow github tutorial，安装完成之后，进行如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure><p>可以用<code>vim ～/.gitconfig</code>查看配置好的文件。<br>然后生成ssh密钥文件：<br><code>ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</code><br>打开GitHub_Settings_keys 页面，新建new SSH Key.<br>Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。<br>在Git Bash中检测GitHub公钥设置是否成功，输入 ssh <a href="mailto:git@github.com">git@github.com</a>.如果输出是下面的样子，说明你已经设置好了。完成了这一步，你就不用在每次push的时候输入密码了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PTY allocation request failed on channel 0</span><br><span class="line">Hi XXX! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line">Connection to github.com closed.</span><br></pre></td></tr></table></figure></li><li><p>安装Node.js<br><a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a><br>安装完成后用<code>npm -v</code>检测一下。</p></li><li><p>安装Hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装完成后用下面的cmd初始化博客：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p>用如下命令检测一下生成的博客：(生成一个名为test的博文，然后给一个本地URL进行检测)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new test</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>在浏览器输入<code>localhost:4000</code>就可以查看生成的博客了。</p></li></ol><h2 id="Hexo配置"><a href="#Hexo配置" class="headerlink" title="Hexo配置"></a>Hexo配置</h2><h3 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h3><p>你可用vscode来管理整个Hexo目录。然后对<code>_config.yml</code>进行基本配置，比如网站名称，描述等等。<br><img src="https://i.imgur.com/ig3Ceqy.jpg" alt=""></p><h3 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h3><p>Hexo会有默认的Theme，你可以<a href="https://hexo.io/themes/" target="_blank" rel="noopener">在这里</a>安装自己喜欢的Theme。<br>如果你喜欢自己配置和fancy一点的UI，可以采用<a href="https://github.com/ppoffice/hexo-theme-icarus" target="_blank" rel="noopener">icarus</a>.<br><img src="https://i.imgur.com/q2lLsCF.jpg" alt=""><br>我用的是<a href="https://github.com/next-theme/hexo-theme-next" target="_blank" rel="noopener">next</a>，好处是非常简洁，而且不用花时间配置。<br><img src="https://i.imgur.com/jXEMtKK.jpg" alt=""><br>你可以用一下命令进行安装：<br><code>git clone https://github.com/next-theme/hexo-theme-next themes/next</code><br>然后在配置文件中更改主题：<br><img src="https://i.imgur.com/VNeEGo5.jpg" alt=""></p><h3 id="常用的Hexo-Cmd"><a href="#常用的Hexo-Cmd" class="headerlink" title="常用的Hexo Cmd"></a>常用的Hexo Cmd</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;文章名称&quot; &#x3D;&#x3D; hexo new &quot;文章名称&quot; #新建文章</span><br><span class="line">hexo g &#x3D;&#x3D; hexo generate #生成</span><br><span class="line">hexo s &#x3D;&#x3D; hexo server #启动服务预览</span><br><span class="line">hexo d &#x3D;&#x3D; hexo deploy #部署</span><br><span class="line">hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</span><br><span class="line"></span><br><span class="line">hexo g -d #直接发布</span><br></pre></td></tr></table></figure><h2 id="用MWEB配合HEXO发布博客"><a href="#用MWEB配合HEXO发布博客" class="headerlink" title="用MWEB配合HEXO发布博客"></a>用MWEB配合HEXO发布博客</h2><p>MWEB是markdown编辑器。之前我用MWEB来写博客，然后发布到wordpress上面，非常方便。那么怎么用MWEB配合HEXO呢？</p><ol><li>首先设置MWEB为外部模式，并且把HEXO的source文件夹加上<br><img src="https://i.imgur.com/7PEWENy.png" alt="iShot2020-05-17PM02.59.27"></li><li>设置图床<br><img src="https://i.imgur.com/uQHsroI.jpg" alt=""></li><li>默认使用外部设置<br><img src="https://i.imgur.com/cuhbvYD.png" alt="iShot2020-05-17PM02.56.43"></li></ol><p>这样就可以愉快的用MWEB写博客了🎉</p><h2 id="NEXT主题的更多配置"><a href="#NEXT主题的更多配置" class="headerlink" title="NEXT主题的更多配置"></a>NEXT主题的更多配置</h2><h3 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h3><p>进入主题的<code>_config.yml</code>文件，对<code>menu</code>进行编辑<br><img src="https://i.imgur.com/2gmw5qL.jpg" alt=""></p><h3 id="创建分类和标签页面"><a href="#创建分类和标签页面" class="headerlink" title="创建分类和标签页面"></a>创建分类和标签页面</h3><p><img src="https://i.imgur.com/9i7UyDe.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>然后设置<code>type: &quot;categories&quot;</code>和<code>type: &quot;tags&quot;</code><br>参考：<a href="https://github.com/iissnan/hexo-theme-next/wiki/%E5%88%9B%E5%BB%BA%E5%88%86%E7%B1%BB%E9%A1%B5%E9%9D%A2" target="_blank" rel="noopener">创建分类页面</a></p><h3 id="设置搜索"><a href="#设置搜索" class="headerlink" title="设置搜索"></a>设置搜索</h3><p>安装<code>hexo-generator-search</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>在配置文件中开启搜索：<br><img src="https://i.imgur.com/ttv4zpS.jpg" alt=""><br>搜索功能展示截图：<br><img src="https://i.imgur.com/IVm4Mq1.jpg" alt=""></p><h3 id="隐藏页面底部的powered-by"><a href="#隐藏页面底部的powered-by" class="headerlink" title="隐藏页面底部的powered by"></a>隐藏页面底部的powered by</h3><p>在vscode中选中next文件夹，然后用<code>alt+shift+f</code>在里面搜索<code>Powered by Hexo &amp; NexT</code>:<br><img src="https://i.imgur.com/F8q0118.png" alt="iShot2020-05-17PM09.12.04"></p><h3 id="开启访问量统计"><a href="#开启访问量统计" class="headerlink" title="开启访问量统计"></a>开启访问量统计</h3><p>在<code>_config.yml</code>中开启busuanzi即可：<br><img src="https://i.imgur.com/rGq5kfw.jpg" alt=""></p><h3 id="如何开启阅读全文功能"><a href="#如何开启阅读全文功能" class="headerlink" title="如何开启阅读全文功能"></a>如何开启阅读全文功能</h3><p>根据<a href="https://theme-next.js.org/docs/theme-settings/posts" target="_blank" rel="noopener">Next文档</a>，推荐的方式是在文章中加入<code>&lt;!-- more --&gt;</code>.<br>Next会自动解析。这样的好处是可以自己控制在哪里分段。</p><h3 id="写文章时如何用多个tag或者category"><a href="#写文章时如何用多个tag或者category" class="headerlink" title="写文章时如何用多个tag或者category"></a>写文章时如何用多个tag或者category</h3><p>参考：<a href="https://github.com/theme-next/hexo-theme-next/issues/327" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next/issues/327</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
